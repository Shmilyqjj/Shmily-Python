#!/usr/bin/env python
# encoding: utf-8
"""
:Description: 0-1背包问题
:Author: 佳境Shmily
:Create Time: 2020/4/26 13:34
:File: 0_1_pack
:Site: shmily-qjj.top
应用：贪心算法
贪心算法分三步：
第一步--明确到底什么是最优解？明确下来之后用小本本记下来！
第二步--明确什么是子问题的最优解？再用小本本记下来！
第三步--分别求出子问题的最优解再堆叠出全局最优解？这步不用记！


我总结一下使用贪心算法的前提：
1、原问题复杂度过高；
2、求全局最优解的数学模型难以建立；
3、求全局最优解的计算量过大；
4、没有太大必要一定要求出全局最优解，“比较优”就可以。
那么几乎99.99999999999%就要使用贪心算法的思想来解决问题。


例子：
有一个背包，最多能承载150斤的重量，现在有7个物品，重量分别为[35, 30, 60, 50, 40, 10, 25]，它们的价值分别为[10, 40, 30, 50, 35, 40, 30]
如果是你的话，应该如何选择才能使得我们的背包背走最多价值的物品？

参考：
最终的总重量是：150。
最终的总价值是：170。
"""






if __name__ == '__main__':
    pass
